// Code generated by protoc-gen-rest-metadata. DO NOT EDIT.
// source: signrpc/signer.proto

/*
Package signrpc contains REST metadata.
*/
package signrpc

import (
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
)

// RegisterSignerHandlerMetadata registers the http
// handler metadata for service Signer.
func RegisterSignerHandlerMetadata(targetMap map[string]struct {
	ClientStreaming bool
	ServerStreaming bool
	Method          string
	Pattern         runtime.Pattern
}) {

	targetMap["/signrpc.Signer/SignOutputRaw"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v2", "signer", "signraw"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/signrpc.Signer/ComputeInputScript"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v2", "signer", "inputscript"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/signrpc.Signer/SignMessage"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v2", "signer", "signmessage"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/signrpc.Signer/VerifyMessage"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v2", "signer", "verifymessage"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/signrpc.Signer/DeriveSharedKey"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v2", "signer", "sharedkey"}, "", runtime.AssumeColonVerbOpt(true))),
	}

}
