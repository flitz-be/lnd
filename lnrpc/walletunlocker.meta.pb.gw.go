// Code generated by protoc-gen-rest-metadata. DO NOT EDIT.
// source: walletunlocker.proto

/*
Package lnrpc contains REST metadata.
*/
package lnrpc

import (
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
)

// RegisterWalletUnlockerHandlerMetadata registers the http
// handler metadata for service WalletUnlocker.
func RegisterWalletUnlockerHandlerMetadata(targetMap map[string]struct {
	ClientStreaming bool
	ServerStreaming bool
	Method          string
	Pattern         runtime.Pattern
}) {

	targetMap["/lnrpc.WalletUnlocker/GenSeed"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "genseed"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.WalletUnlocker/InitWallet"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "initwallet"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.WalletUnlocker/UnlockWallet"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "unlockwallet"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.WalletUnlocker/ChangePassword"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "changepassword"}, "", runtime.AssumeColonVerbOpt(true))),
	}

}
