// Code generated by protoc-gen-rest-metadata. DO NOT EDIT.
// source: rpc.proto

/*
Package lnrpc contains REST metadata.
*/
package lnrpc

import (
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
)

// RegisterLightningHandlerMetadata registers the http
// handler metadata for service Lightning.
func RegisterLightningHandlerMetadata(targetMap map[string]struct {
	ClientStreaming bool
	ServerStreaming bool
	Method          string
	Pattern         runtime.Pattern
}) {

	targetMap["/lnrpc.Lightning/WalletBalance"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "balance", "blockchain"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ChannelBalance"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "balance", "channels"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/GetTransactions"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "transactions"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/EstimateFee"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "transactions", "fee"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SendCoins"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "transactions"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ListUnspent"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "utxos"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SubscribeTransactions"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "transactions", "subscribe"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SendMany"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "transactions", "many"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/NewAddress"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "newaddress"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SignMessage"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "signmessage"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/VerifyMessage"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "verifymessage"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ConnectPeer"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "peers"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/DisconnectPeer"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "DELETE",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 1, 0, 4, 1, 5, 2}, []string{"v1", "peers", "pub_key"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ListPeers"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "peers"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SubscribePeerEvents"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "peers", "subscribe"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/GetInfo"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "getinfo"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/GetRecoveryInfo"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "getrecoveryinfo"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/PendingChannels"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "pending"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ListChannels"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "channels"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SubscribeChannelEvents"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "subscribe"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ClosedChannels"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "closed"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/OpenChannelSync"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "channels"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/OpenChannel"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "stream"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/FundingStateStep"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "funding", "step"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ChannelAcceptor"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: true,
		ServerStreaming: true,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "acceptor"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/CloseChannel"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "DELETE",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 1, 0, 4, 1, 5, 2, 1, 0, 4, 1, 5, 3}, []string{"v1", "channels", "channel_point.funding_txid_str", "channel_point.output_index"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/AbandonChannel"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "DELETE",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3, 1, 0, 4, 1, 5, 4}, []string{"v1", "channels", "abandon", "channel_point.funding_txid_str", "channel_point.output_index"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SendPayment"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: true,
		ServerStreaming: true,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "transaction-stream"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SendPaymentSync"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "transactions"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SendToRouteSync"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v1", "channels", "transactions", "route"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/AddInvoice"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "invoices"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ListInvoices"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "invoices"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/LookupInvoice"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 1, 0, 4, 1, 5, 2}, []string{"v1", "invoice", "r_hash_str"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SubscribeInvoices"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "invoices", "subscribe"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/DecodePayReq"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 1, 0, 4, 1, 5, 2}, []string{"v1", "payreq", "pay_req"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ListPayments"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "payments"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/DeleteAllPayments"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "DELETE",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "payments"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/DescribeGraph"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "graph"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/GetNodeMetrics"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "graph", "nodemetrics"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/GetChanInfo"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{"v1", "graph", "edge", "chan_id"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/GetNodeInfo"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{"v1", "graph", "node", "pub_key"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/QueryRoutes"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3, 1, 0, 4, 1, 5, 4}, []string{"v1", "graph", "routes", "pub_key", "amt"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/GetNetworkInfo"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "graph", "info"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/StopDaemon"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "stop"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SubscribeChannelGraph"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "graph", "subscribe"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/DebugLevel"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "debuglevel"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/FeeReport"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "fees"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/UpdateChannelPolicy"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "chanpolicy"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ForwardingHistory"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "switch"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ExportChannelBackup"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3, 1, 0, 4, 1, 5, 4}, []string{"v1", "channels", "backup", "chan_point.funding_txid_str", "chan_point.output_index"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ExportAllChannelBackups"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "channels", "backup"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/VerifyChanBackup"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v1", "channels", "backup", "verify"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/RestoreChannelBackups"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v1", "channels", "backup", "restore"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/SubscribeChannelBackups"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: true,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v1", "channels", "backup", "subscribe"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/BakeMacaroon"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "POST",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v1", "macaroon"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ListMacaroonIDs"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "macaroon", "ids"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/DeleteMacaroonID"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "DELETE",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 1, 0, 4, 1, 5, 2}, []string{"v1", "macaroon", "root_key_id"}, "", runtime.AssumeColonVerbOpt(true))),
	}

	targetMap["/lnrpc.Lightning/ListPermissions"] = struct {
		ClientStreaming bool
		ServerStreaming bool
		Method          string
		Pattern         runtime.Pattern
	}{
		ClientStreaming: false,
		ServerStreaming: false,
		Method:          "GET",
		Pattern:         runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v1", "macaroon", "permissions"}, "", runtime.AssumeColonVerbOpt(true))),
	}

}
